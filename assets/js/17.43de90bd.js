(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{464:function(t,e,r){"use strict";r.r(e);var a=r(2),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"frontmatter-title"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[t._v("#")]),t._v(" "+t._s(t.$frontmatter.title))]),t._v(" "),r("h2",{attrs:{id:"目的"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#目的"}},[t._v("#")]),t._v(" 目的")]),t._v(" "),r("h2",{attrs:{id:"背景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),r("p",[t._v("LocalStorageにトークン入れてる記事多くない？\nダメって意見をよく聞くけどどうしてだろう。\nそういう記事では大抵LocalStorageを使う理由が書いていないので、参考にした記事がそうやってたからでなんとなく使っているんじゃないかと邪推。")]),t._v(" "),r("h3",{attrs:{id:"セッションベース認証"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#セッションベース認証"}},[t._v("#")]),t._v(" セッションベース認証")]),t._v(" "),r("h3",{attrs:{id:"トークンベース認証"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#トークンベース認証"}},[t._v("#")]),t._v(" トークンベース認証")]),t._v(" "),r("p",[t._v("参考になるページ\n"),r("a",{attrs:{href:"https://christina04.hatenablog.com/entry/2016/06/07/123000",target:"_blank",rel:"noopener noreferrer"}},[t._v("JWTを認証用トークンに使う時に調べたこと - Carpe Diem"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://christina04.hatenablog.com/entry/secure-token-management",target:"_blank",rel:"noopener noreferrer"}},[t._v("セキュアなトークン管理方法 - Carpe Diem"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("AuthorizationのBearerにトークンを入れてサーバーサイドへ送る必要がある。\nこの場合、クライアントサイドで「AuthorizationのBearerにトークンを入れる」という作業が必要になるのでJavaScriptでトークンにアクセスできないといけない。\nこれはHttpOnlyをつけていないcookieか、LocalStorageでないと実現できない。\n→　と思っていたけど、Cookieで実装するとCookieでやりとりできるのでヘッダにつける意味がなかった\n→　LocalStorageへの保存はCookieでやりとりしないための実装か\n　　ただ、保管先としてのみCookieを扱うという方法もある\n　　セキュアなのはCookie認証なのかもしれない（Cookieのほうがよりセキュアなので）")]),t._v(" "),r("p",[t._v("トークンが漏洩したときに不正アクセス出来てしまうが、そもそも漏洩するのか\n※セッションハイジャック")]),t._v(" "),r("p",[t._v("CookieはCSRFに弱い")]),t._v(" "),r("p",[t._v("セッションベースの認証はDBに保存するらしいが、トークンベースはサーバーサイドに保持しないのではないか\n→　トークン認証の実装方法についてこれが参考になる\n"),r("a",{attrs:{href:"https://qiita.com/TakahikoKawasaki/items/970548727761f9e02bcd",target:"_blank",rel:"noopener noreferrer"}},[t._v("OAuth アクセストークンの実装に関する考察 - Qiita"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("識別子型と内包型があり、内包型の方がDBに対する負荷がないので良さそうに見える\n→　ただし、セッションハイジャックによりトークンが盗まれた場合に中身を見られてしまう危険性があるんじゃないか　って考えた\n　　でもセッションハイジャックされてる時点でまずくない？どっちにしても不正アクセスされる可能性あるし\n　　あと、見られて困る情報はトークンに入れないようにするので問題なさそう")]),t._v(" "),r("p",[t._v("RS256はよくないって書いてるな")]),t._v(" "),r("p",[t._v("注意点\n内包型はアクセストークンの失効が難しい。\n識別子型は対象レコードを削除することで失効させることができる。\n一方、内包型はアクセストークンの期限が切れるまでは有効なので失効させることが難しい。\nまた、Cookieであればブラウザを閉じた際に破棄することができるが、LocalStorageは永続的なので共有PCから個人アカウントでログインするような使い方が想定される場面では向かない\n→　この場合はCookie認証を使うしかない")]),t._v(" "),r("p",[t._v("あと、内包型はロール管理があるようなシステムだとちょっと面倒かもしれない\nロールを更新する際にトークンも更新しないと、新しい権限が適用されないことになってしまう\n→　一般ユーザーとシステム管理者だけのシステムなら必要なときだけ権限チェック入れればいいんじゃないかって思ったけど、ロールが増えたときに実装を買えないといけなくなるので拡張性の面で問題がある")]),t._v(" "),r("p",[t._v("フロントエンド側の表示制御も必要だと考えると、レスポンス自体にユーザー情報やロール情報を含めた上でトークンやCookieを返すという実装になる")]),t._v(" "),r("p",[t._v("他、参考\n"),r("a",{attrs:{href:"https://qiita.com/rh_taro/items/60cb806250d1a11fe2d3",target:"_blank",rel:"noopener noreferrer"}},[t._v("[SPA]脆弱性を潰して認証情報を扱う[アクセストークン] - Qiita"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://qiita.com/Coolucky/items/416a11054d81cccdb52f",target:"_blank",rel:"noopener noreferrer"}},[t._v("RailsアプリではJWTをcookie管理するしかない！！ - Qiita"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://k-cb.co.jp/technical-blog/jwt_auth_with_rails5_preparation/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rails 5 API で JWTを使った Token Based 認証機能を実装する 〜 事前準備 ~ | KCB：株式会社 北見コンピューター・ビジネス"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://coders-shelf.com/react-auth-problem/",target:"_blank",rel:"noopener noreferrer"}},[t._v("React(SPA)での認証についてまとめ - エンジニアの本棚"),r("OutboundLink")],1),t._v(" "),r("a",{attrs:{href:"https://qiita.com/hirohero/items/8199cda2fada7432887e",target:"_blank",rel:"noopener noreferrer"}},[t._v("axiosでBearerトークンを簡単に設定したい。 - Qiita"),r("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=o.exports}}]);